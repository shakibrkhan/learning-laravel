// Lv Delete query builder with file deletion
public function deleteProduct(Request $request, $productID)
    {
        $productData = DB::table('products')->where('id', '=', $productID)->first();
        $imageFileName = $productData->image_file_name;
        $filePath = public_path() . '/uploads' . '/' . $imageFileName;
        File::delete($filePath);
        DB::table('products')->where('id', '=', $productID)->delete();        
        session()->flash('msg', 'Product deleted successfully!');
        return redirect()->route('product_list');        
    }

// Update operation with image update if image needs to update
public function updateProduct(Request $request, $id)
    {
        $productName = $request->input('productName');
        $description = $request->input('description');
        $categoryId = $request->input('categoryId');
        $costingPrice = $request->input('costingPrice');
        $salePrice = $request->input('salePrice');
        $productImageFile = $request->file('productImage');

        if ( is_null($productImageFile) ) {
            $v = Validator::make($request->all(), [
                'productName' => 'required',
                'costingPrice' => 'required',
                'salePrice' => 'required',
            ]);

            if ( $v->fails() )
            {
                return redirect()->back()->withErrors($v->errors());
            }

            $insertData = [
                'category_id'   => $categoryId,
                'name'          => $productName,
                'description'   => $description,
                'costing_price' => $costingPrice,
                'sale_price'    => $salePrice,
                'created_at' => now(),
                'updated_at' => now()
            ];
            DB::table('products')->where('id', $id)->update($insertData);
        }
        else {
            $v = Validator::make($request->all(), [
                'productName' => 'required',
                'costingPrice' => 'required',
                'salePrice' => 'required',
                'productImage' => 'mimes:jpeg,bmp,png|max:5120',
            ]);

            if ( $v->fails() )
            {
                return redirect()->back()->withErrors($v->errors());
            }

            //Get image file name of this product
            $productData = DB::table('products')->where('id', '=', $id)->first();
            $imagefileName = $productData->image_file_name;

            //Move Uploaded File
            $destinationPath = 'uploads';
            $productImageFile->move($destinationPath, $imagefileName);        

            $insertData = [
                'category_id'   => $categoryId,
                'name'          => $productName,
                'description'   => $description,
                'costing_price' => $costingPrice,
                'sale_price'    => $salePrice,
                'image_file_name' => $imagefileName,
                'created_at' => now(),
                'updated_at' => now()
            ];
            DB::table('products')->where('id', $id)->update($insertData);
        }

        session()->flash('msg', 'Product updated successfully!');
        return redirect()->route('product_list');
    }